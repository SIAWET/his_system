<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.dao.DepartmentMapper">
  <resultMap id="BaseResultMap" type="com.neu.model.Department">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="dept_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="dept_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="dept_category_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="dept_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, dept_code, dept_name, dept_category_id, dept_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from department
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from department
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neu.model.Department">
    insert into department (id, dept_code, dept_name, 
      dept_category_id, dept_type)
    values (#{id,jdbcType=INTEGER}, #{deptCode,jdbcType=VARCHAR}, #{deptName,jdbcType=VARCHAR}, 
      #{deptCategoryId,jdbcType=INTEGER}, #{deptType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neu.model.Department">
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="deptCode != null">
        dept_code,
      </if>
      <if test="deptName != null">
        dept_name,
      </if>
      <if test="deptCategoryId != null">
        dept_category_id,
      </if>
      <if test="deptType != null">
        dept_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deptCode != null">
        #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="deptName != null">
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="deptCategoryId != null">
        #{deptCategoryId,jdbcType=INTEGER},
      </if>
      <if test="deptType != null">
        #{deptType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neu.model.Department">
    update department
    <set>
      <if test="deptCode != null">
        dept_code = #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="deptName != null">
        dept_name = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="deptCategoryId != null">
        dept_category_id = #{deptCategoryId,jdbcType=INTEGER},
      </if>
      <if test="deptType != null">
        dept_type = #{deptType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neu.model.Department">
    update department
    set dept_code = #{deptCode,jdbcType=VARCHAR},
      dept_name = #{deptName,jdbcType=VARCHAR},
      dept_category_id = #{deptCategoryId,jdbcType=INTEGER},
      dept_type = #{deptType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAllDeptName" resultType="java.lang.String">
    select dept_name from department
  </select>

  <select id="selectByDeptName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from department
    where dept_name = #{deptName,jdbcType=VARCHAR}
  </select>
</mapper>