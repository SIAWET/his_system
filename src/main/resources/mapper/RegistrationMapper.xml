<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.dao.RegistrationMapper">
  <resultMap id="BaseResultMap" type="com.neu.model.Registration">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="medical_record_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="regis_date" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="noon_distinction" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="dept_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="doc_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="regis_level_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="settlement_category_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="is_medical_book" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="regis_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="regis_state" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, medical_record_id, regis_date, noon_distinction, dept_id, doc_id, regis_level_id, 
    settlement_category_id, is_medical_book, regis_time, regis_state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from registration
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from registration
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neu.model.Registration">
    insert into registration (id, medical_record_id, regis_date, 
      noon_distinction, dept_id, doc_id, 
      regis_level_id, settlement_category_id, is_medical_book, 
      regis_time, regis_state)
    values (#{id,jdbcType=INTEGER}, #{medicalRecordId,jdbcType=INTEGER}, #{regisDate,jdbcType=DATE}, 
      #{noonDistinction,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER}, #{docId,jdbcType=INTEGER}, 
      #{regisLevelId,jdbcType=INTEGER}, #{settlementCategoryId,jdbcType=INTEGER}, #{isMedicalBook,jdbcType=BIT}, 
      #{regisTime,jdbcType=TIMESTAMP}, #{regisState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neu.model.Registration">
    insert into registration
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="medicalRecordId != null">
        medical_record_id,
      </if>
      <if test="regisDate != null">
        regis_date,
      </if>
      <if test="noonDistinction != null">
        noon_distinction,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="docId != null">
        doc_id,
      </if>
      <if test="regisLevelId != null">
        regis_level_id,
      </if>
      <if test="settlementCategoryId != null">
        settlement_category_id,
      </if>
      <if test="isMedicalBook != null">
        is_medical_book,
      </if>
      <if test="regisTime != null">
        regis_time,
      </if>
      <if test="regisState != null">
        regis_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="medicalRecordId != null">
        #{medicalRecordId,jdbcType=INTEGER},
      </if>
      <if test="regisDate != null">
        #{regisDate,jdbcType=DATE},
      </if>
      <if test="noonDistinction != null">
        #{noonDistinction,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="docId != null">
        #{docId,jdbcType=INTEGER},
      </if>
      <if test="regisLevelId != null">
        #{regisLevelId,jdbcType=INTEGER},
      </if>
      <if test="settlementCategoryId != null">
        #{settlementCategoryId,jdbcType=INTEGER},
      </if>
      <if test="isMedicalBook != null">
        #{isMedicalBook,jdbcType=BIT},
      </if>
      <if test="regisTime != null">
        #{regisTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regisState != null">
        #{regisState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neu.model.Registration">
    update registration
    <set>
      <if test="medicalRecordId != null">
        medical_record_id = #{medicalRecordId,jdbcType=INTEGER},
      </if>
      <if test="regisDate != null">
        regis_date = #{regisDate,jdbcType=DATE},
      </if>
      <if test="noonDistinction != null">
        noon_distinction = #{noonDistinction,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="docId != null">
        doc_id = #{docId,jdbcType=INTEGER},
      </if>
      <if test="regisLevelId != null">
        regis_level_id = #{regisLevelId,jdbcType=INTEGER},
      </if>
      <if test="settlementCategoryId != null">
        settlement_category_id = #{settlementCategoryId,jdbcType=INTEGER},
      </if>
      <if test="isMedicalBook != null">
        is_medical_book = #{isMedicalBook,jdbcType=BIT},
      </if>
      <if test="regisTime != null">
        regis_time = #{regisTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regisState != null">
        regis_state = #{regisState,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neu.model.Registration">
    update registration
    set medical_record_id = #{medicalRecordId,jdbcType=INTEGER},
      regis_date = #{regisDate,jdbcType=DATE},
      noon_distinction = #{noonDistinction,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=INTEGER},
      doc_id = #{docId,jdbcType=INTEGER},
      regis_level_id = #{regisLevelId,jdbcType=INTEGER},
      settlement_category_id = #{settlementCategoryId,jdbcType=INTEGER},
      is_medical_book = #{isMedicalBook,jdbcType=BIT},
      regis_time = #{regisTime,jdbcType=TIMESTAMP},
      regis_state = #{regisState,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getLastKey" resultType="java.lang.Integer">
    select id
    from registration order by id desc limit 1
  </select>

  <select id="getByMedReId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from registration
    where medical_record_id = #{medicalRecordId,jdbcType=INTEGER}
  </select>

  <select id="getByDocId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from registration
    where doc_id = #{docId,jdbcType=INTEGER}
  </select>

  <select id="getByDeptId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from registration
    where dept_id = #{deptId,jdbcType=INTEGER}
  </select>

</mapper>