<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.neu.model.User">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="psw" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pro_title_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="department_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="regis_level_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, username, psw, name, user_type, pro_title_id, department_id, regis_level_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neu.model.User">
    insert into user (id, username, psw, 
      name, user_type, pro_title_id, 
      department_id, regis_level_id)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{psw,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}, #{proTitleId,jdbcType=INTEGER}, 
      #{departmentId,jdbcType=INTEGER}, #{regisLevelId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neu.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="psw != null">
        psw,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="proTitleId != null">
        pro_title_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="regisLevelId != null">
        regis_level_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="psw != null">
        #{psw,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="proTitleId != null">
        #{proTitleId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="regisLevelId != null">
        #{regisLevelId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neu.model.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="psw != null">
        psw = #{psw,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="proTitleId != null">
        pro_title_id = #{proTitleId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="regisLevelId != null">
        regis_level_id = #{regisLevelId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neu.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      psw = #{psw,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      pro_title_id = #{proTitleId,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      regis_level_id = #{regisLevelId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByDeptIdAndRegLeId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where department_id = #{departmentId,jdbcType=INTEGER}
    and regis_level_id = #{regisLevelId,jdbcType=INTEGER}
  </select>

  <select id="selectByName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where name = #{name,jdbcType=VARCHAR}
  </select>

  <select id="selectByUsernameAndPwd" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{username,jdbcType=VARCHAR} and
    psw = #{psw,jdbcType=VARCHAR}
  </select>
</mapper>