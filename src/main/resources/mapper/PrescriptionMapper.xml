<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.dao.PrescriptionMapper">
  <resultMap id="BaseResultMap" type="com.neu.model.Prescription">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="med_rec_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="regis_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="doc_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="presc_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="state" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, med_rec_id, regis_id, doc_id, presc_name, create_time, state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from prescription
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from prescription
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neu.model.Prescription">
    insert into prescription (id, med_rec_id, regis_id, 
      doc_id, presc_name, create_time, 
      state)
    values (#{id,jdbcType=INTEGER}, #{medRecId,jdbcType=INTEGER}, #{regisId,jdbcType=INTEGER}, 
      #{docId,jdbcType=INTEGER}, #{prescName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neu.model.Prescription">
    insert into prescription
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="medRecId != null">
        med_rec_id,
      </if>
      <if test="regisId != null">
        regis_id,
      </if>
      <if test="docId != null">
        doc_id,
      </if>
      <if test="prescName != null">
        presc_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="medRecId != null">
        #{medRecId,jdbcType=INTEGER},
      </if>
      <if test="regisId != null">
        #{regisId,jdbcType=INTEGER},
      </if>
      <if test="docId != null">
        #{docId,jdbcType=INTEGER},
      </if>
      <if test="prescName != null">
        #{prescName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neu.model.Prescription">
    update prescription
    <set>
      <if test="medRecId != null">
        med_rec_id = #{medRecId,jdbcType=INTEGER},
      </if>
      <if test="regisId != null">
        regis_id = #{regisId,jdbcType=INTEGER},
      </if>
      <if test="docId != null">
        doc_id = #{docId,jdbcType=INTEGER},
      </if>
      <if test="prescName != null">
        presc_name = #{prescName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neu.model.Prescription">
    update prescription
    set med_rec_id = #{medRecId,jdbcType=INTEGER},
      regis_id = #{regisId,jdbcType=INTEGER},
      doc_id = #{docId,jdbcType=INTEGER},
      presc_name = #{prescName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>