<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.dao.InvoiceMapper">
  <resultMap id="BaseResultMap" type="com.neu.model.Invoice">
    <constructor>
      <idArg column="invoice_num" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="state" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="manu_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="regis_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="toll_by" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="is_red_dash" javaType="java.lang.Byte" jdbcType="TINYINT" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    invoice_num, amount, state, time, manu_id, regis_id, toll_by, is_red_dash
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from invoice
    where invoice_num = #{invoiceNum,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from invoice
    where invoice_num = #{invoiceNum,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.neu.model.Invoice">
    insert into invoice (invoice_num, amount, state, 
      time, manu_id, regis_id, 
      toll_by, is_red_dash)
    values (#{invoiceNum,jdbcType=BIGINT}, #{amount,jdbcType=DECIMAL}, #{state,jdbcType=INTEGER}, 
      #{time,jdbcType=TIMESTAMP}, #{manuId,jdbcType=INTEGER}, #{regisId,jdbcType=INTEGER}, 
      #{tollBy,jdbcType=VARCHAR}, #{isRedDash,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.neu.model.Invoice">
    insert into invoice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="invoiceNum != null">
        invoice_num,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="manuId != null">
        manu_id,
      </if>
      <if test="regisId != null">
        regis_id,
      </if>
      <if test="tollBy != null">
        toll_by,
      </if>
      <if test="isRedDash != null">
        is_red_dash,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="invoiceNum != null">
        #{invoiceNum,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="manuId != null">
        #{manuId,jdbcType=INTEGER},
      </if>
      <if test="regisId != null">
        #{regisId,jdbcType=INTEGER},
      </if>
      <if test="tollBy != null">
        #{tollBy,jdbcType=VARCHAR},
      </if>
      <if test="isRedDash != null">
        #{isRedDash,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neu.model.Invoice">
    update invoice
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="manuId != null">
        manu_id = #{manuId,jdbcType=INTEGER},
      </if>
      <if test="regisId != null">
        regis_id = #{regisId,jdbcType=INTEGER},
      </if>
      <if test="tollBy != null">
        toll_by = #{tollBy,jdbcType=VARCHAR},
      </if>
      <if test="isRedDash != null">
        is_red_dash = #{isRedDash,jdbcType=TINYINT},
      </if>
    </set>
    where invoice_num = #{invoiceNum,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neu.model.Invoice">
    update invoice
    set amount = #{amount,jdbcType=DECIMAL},
      state = #{state,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      manu_id = #{manuId,jdbcType=INTEGER},
      regis_id = #{regisId,jdbcType=INTEGER},
      toll_by = #{tollBy,jdbcType=VARCHAR},
      is_red_dash = #{isRedDash,jdbcType=TINYINT}
    where invoice_num = #{invoiceNum,jdbcType=BIGINT}
  </update>

  <select id="getLastKey" resultType="java.lang.Long">
    select invoice_num
    from invoice order by invoice_num desc limit 1
  </select>
</mapper>